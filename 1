#include <msp430.h>

char id[17];                // Array to store the ID
unsigned int idx = 0;       // To track received characters

uint8_t isValidID(char *id);  // Function declaration to check ID validity

void main(void)
{
    WDTCTL = WDTPW | WDTHOLD;  // Stop watchdog timer

    P1DIR |= BIT0;             // Set P1.0 as output (Green LED)
    P2DIR |= BIT1;             // Set P2.1 as output (Red LED)

    // UART Configuration
    P1SEL0 |= BIT4 | BIT5;     // Set P1.4 and P1.5 as UART pins
    UCA0CTLW0 = UCSWRST;       // Put eUSCI in reset
    UCA0CTLW0 |= UCSSEL_2;     // Choose clock source as SMCLK
    UCA0BR0 = 8;               // Set baud rate to 115200
    UCA0BR1 = 0;  
    UCA0MCTLW |= UCOS16 | UCBRF_10 | UCBRS_0; 
    UCA0CTLW0 &= ~UCSWRST;     // Initialize eUSCI
    UCA0IE |= UCRXIE;          // Enable USCI_A0 RX interrupt

    __bis_SR_register(GIE);    // Enable general interrupts

    while (1)
    {
        if (idx == 16)
        {
            id[idx] = '\0';
            idx = 0;

            if (isValidID(id))
            {
                P1OUT |= BIT0;
                __delay_cycles(500000);
                P1OUT &= ~BIT0;
            }
            else
            {
                P2OUT |= BIT1;
                __delay_cycles(1000000);
                P2OUT &= ~BIT1;
            }
        }
    }
}

#pragma vector=USCI_A0_VECTOR
__interrupt void USCI_A0_ISR(void)
{
    switch(__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG))
    {
        case USCI_NONE: break;
        case USCI_UART_UCRXIFG:
            id[idx++] = UCA0RXBUF;
            UCA0TXBUF = '*';       // Send '*' to PC
            P2OUT ^= BIT1;        // Toggle Red LED
            break;
        case USCI_UART_UCTXIFG: break;
        case USCI_UART_UCSTTIFG: break;
        case USCI_UART_UCTXCPTIFG: break;
    }
}

uint8_t isValidID(char *id)
{
    int sum = 0;
    int length = 16;
    int digit = 0;

    for (int i = 0; i < length; i++)
    {
        digit = id[i] - '0';
        if (i % 2 == 0)
        {
            digit *= 2;
            if (digit > 9)
            {
                digit -= 9;
            }
        }
        sum += digit;
    }
    return (sum % 10 == 0);
}
